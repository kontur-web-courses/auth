@using System.Security.Claims
@using IdentityModel
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.DataProtection
@using Microsoft.AspNetCore.Identity
@using NUnit.Framework

@inject IDataProtectionProvider dataProtectionProvider
@inject ICookieManager cookieManager

@{
    var cookies = Context.Request.Cookies;
    var user = Context.User;

    void RenderCookieInfo(string cookieName, params string[] schemes)
    {
        var cookieValue = cookieManager.GetRequestCookie(Context, cookieName);
        if (cookieValue != null)
        {
            var tickets = schemes.Select(s => ExtractTicket(cookieValue, s));
            var ticket = tickets.FirstOrDefault(t => t != null);
            if (ticket != null)
            {
                RenderTicket(ticket);
            }
            else
            {
                <div>Can't extract ticket from "@(cookieName)" cookie</div>
            }
        }
        else
        {
            <div>Can't find "@(cookieName)" cookie</div>
        }
    }

    void RenderTicket(AuthenticationTicket ticket)
    {
        <h4>Properties</h4>
        foreach (var item in ticket.Properties?.Items)
        {
            <div><b>@item.Key</b>: @item.Value</div>
        }
        <div><br /></div>

        <h4>Identity</h4>
        RenderIdentityInfo(ticket.Principal.Identity as ClaimsIdentity);
        <div><br /></div>
    }

    void RenderIdentityInfo(ClaimsIdentity identity)
    {
        <div>
            <div><b>Is authenticated:</b> @identity.IsAuthenticated</div>
            <div><b>Authentication type:</b> @identity.AuthenticationType</div>
            <div><b>Identity name:</b> @identity.Name</div>
            <div><b>Role claim type:</b> @identity.RoleClaimType</div>
            <div><b>Claims count:</b> @identity.Claims.Count()</div>
            @foreach (var claim in identity.Claims)
            {
                <div style="margin-left: 30px">Claim type: <b>@claim.Type</b></div>
                <div style="margin-left: 30px; margin-bottom: 10px;">Claim value: @claim.Value</div>
            }
        </div>
    }

    AuthenticationTicket ExtractTicket(string cookieValue, string scheme)
    {
        var protector = dataProtectionProvider.CreateProtector(
            "Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationMiddleware",
            scheme,
            "v2");
        var ticketDataFormat = (ISecureDataFormat<AuthenticationTicket>)new TicketDataFormat(protector);
        var ticket = ticketDataFormat.Unprotect(cookieValue, null);
        return ticket;
    }
}

<h2>From "PhotosApp.Auth" Cookie</h2>
@{
    RenderCookieInfo("PhotosApp.Auth", IdentityConstants.ApplicationScheme, "Cookie");
}

<h2>From "PhotosApp.Auth.External" Cookie</h2>
@{
    RenderCookieInfo("PhotosApp.Auth.External", IdentityConstants.ExternalScheme);
}

<h2>From User</h2>
@foreach (var claimsIdentity in user.Identities)
{
    <h4>Identity</h4>
    RenderIdentityInfo(claimsIdentity);
}
